#!/usr/bin/perl -w

use strict;

use lib ("$ENV{GEMC}/database_io");
use geo;
use geo qw($pi);

my $DetectorName = 'CLEO_PVDIS_baffle_0p55x5deg_kill';

my $envelope = "solid_$DetectorName";
my $file     = "solid_$DetectorName.txt";

my $rmin      = 1;
my $rmax      = 1000000;

my %detector = ();    # hash (map) that defines the gemc detector
$detector{"rmin"} = $rmin;
$detector{"rmax"} = $rmax;

use Getopt::Long;
use Math::Trig;

my $DetectorMother="root";

my $color_baffle="00C0C0";

my $material_baffle="Kryptonite";
my $sensitivity_baffle="no";
my $hit_baffle="";

# In PVDIS PAC34 proposal, page 35 (http://hallaweb.jlab.org/collab/PAC/PAC34/PR-09-012-pvdis.pdf). It's mentioned that the baffle position is 30,60,90,120,150,180cm relative to BaBar solenoid coil center at 0. But it's actually relative to the target center which is at 10cm as seen on the Fig 3.3 on page 31.
# Later on, it seems Eugene has further tweaked them to 30,58,86,114,142,170. refer to http://hallaweb.jlab.org/12GeV/SoLID/download/sim/geant3/solid_comgeant_pvdis/pvdis_02_01_p_14_01/fort.22

#6 plates, 9cm thick,every 28cm, 30 slits per plate, 20 blocks per slit

# my $targetoff=10; # target offset in cm
#  my $Nplate  = 6;
#  my @PlateZ  = (30+$targetoff,58+$targetoff,86+$targetoff,114+$targetoff,142+$targetoff,170+$targetoff);
#  my $Dz   = 9.0/2.;

my $targetoff=10; # target offset in cm
 my $Nplate  = 11;
 my @PlateZ  = (30+$targetoff,44+$targetoff,58+$targetoff,72+$targetoff,86+$targetoff,100+$targetoff,114+$targetoff,128+$targetoff,142+$targetoff,156+$targetoff,170+$targetoff);
 my $Dz   = 9.0/2.;

sub make_baffle_plate_inner
{
#  my @Rin  = (2.00, 10.86, 21.61, 32.36, 43.10, 53.85);
#  my @Rout = (2.11, 12.86, 23.61, 34.36, 45.10, 55.85);
#  my @Rin = (4.80, 10.86, 21.61, 32.36, 43.10, 53.85);
#  my @Rout = (5.00, 12.86, 23.61, 34.36, 45.10, 55.85);
 my @Rin  = ( 4.90,  6.88, 12.53, 18.19, 23.85, 29.50, 35.16, 40.82, 46.47, 52.13, 57.79 );
 my @Rout = ( 5.00,  7.88, 13.53, 19.19, 24.85, 30.50, 36.16, 41.82, 47.47, 53.13, 58.79 );

 for(my $n=1; $n<=$Nplate; $n++)
 {
    my $n_c     = cnumber($n-1, 1);
    $detector{"name"}        = "$DetectorName\_plateinner$n_c";
    $detector{"mother"}      = "$DetectorMother" ;
    $detector{"description"} = $detector{"name"};
    $detector{"pos"}        = "0*cm 0*cm $PlateZ[$n-1]*cm";
    $detector{"rotation"}   = "0*deg 0*deg 0*deg";
    $detector{"color"}      = "$color_baffle";
    $detector{"type"}       = "Tube";
    $detector{"dimensions"} = "$Rin[$n-1]*cm $Rout[$n-1]*cm $Dz*cm 0*deg 360*deg";
    $detector{"material"}   = "$material_baffle";
    $detector{"mfield"}     = "no";
    $detector{"ncopy"}      = 1;
    $detector{"pMany"}       = 1;
    $detector{"exist"}       = 1;
    $detector{"visible"}     = 1;
    $detector{"style"}       = 1;
    $detector{"sensitivity"} = "$sensitivity_baffle";
    $detector{"hit_type"}    = "$hit_baffle";
    $detector{"identifiers"} = "";
    print_det(\%detector, $file);
 }
}
make_baffle_plate_inner();

sub make_baffle_plate_outer
{
#  my @Rin  = (39.60, 59.94, 80.28, 100.63, 120.97, 141.31);
#  my @Rout = (41.60, 61.94, 82.28, 102.63, 122.97, 143.31);
 my @Rin  = ( 38.16, 47.96, 57.77, 67.57, 77.37, 87.18, 96.98, 106.78, 116.58, 126.39, 136.19 );
 my @Rout = ( 39.16, 48.96, 58.77, 68.57, 78.37, 88.18, 97.98, 107.78, 117.58, 127.39, 137.19 );

 for(my $n=1; $n<=$Nplate; $n++)
 {
    my $n_c     = cnumber($n-1, 1);
    $detector{"name"}        = "$DetectorName\_plateouter$n_c";
    $detector{"mother"}      = "$DetectorMother" ;
    $detector{"description"} = $detector{"name"};
    $detector{"pos"}        = "0*cm 0*cm $PlateZ[$n-1]*cm";
    $detector{"rotation"}   = "0*deg 0*deg 0*deg";
    $detector{"color"}      = "$color_baffle";
    $detector{"type"}       = "Tube";
    $detector{"dimensions"} = "$Rin[$n-1]*cm $Rout[$n-1]*cm $Dz*cm 0*deg 360*deg";
    $detector{"material"}   = "$material_baffle";
    $detector{"mfield"}     = "no";
    $detector{"ncopy"}      = 1;
    $detector{"pMany"}       = 1;
    $detector{"exist"}       = 1;
    $detector{"visible"}     = 1;
    $detector{"style"}       = 1;
    $detector{"sensitivity"} = "$sensitivity_baffle";
    $detector{"hit_type"}    = "$hit_baffle";
    $detector{"identifiers"} = "";
    print_det(\%detector, $file);
 }
}
make_baffle_plate_outer();

#making buffle blocks, palte by plate, slit by slit,block by block
sub make_baffle_blocks
{
my @x =( 
[
 5.00,  6.66, -2.45,  2.35,
 6.66,  8.32, -1.75,  1.75,
 8.32,  9.97, -1.35,  1.95,
 9.97, 11.63, -0.55,  1.95,
11.63, 13.29, -0.25,  1.85,
13.29, 14.95,  0.05,  1.85,
14.95, 16.61,  0.25,  1.95,
16.61, 18.26,  0.45,  2.05,
18.26, 19.92,  0.65,  2.25,
19.92, 21.58,  0.85,  2.35,
21.58, 23.24,  1.05,  2.45,
23.24, 24.90,  1.25,  2.65,
24.90, 26.55,  1.45,  2.85,
26.55, 28.21,  1.65,  3.05,
28.21, 29.87,  1.85,  3.15,
29.87, 31.53,  2.05,  3.45,
31.53, 33.19,  2.25,  3.65,
33.19, 34.85,  2.45,  3.85,
34.85, 36.50,  2.65,  3.95,
36.50, 38.16,  2.85,  4.05
],
[
 7.88,  9.88, -1.25,  1.75,
 9.88, 11.89, -0.95,  1.55,
11.89, 13.89, -0.55,  1.65,
13.89, 15.90, -0.15,  1.75,
15.90, 17.90,  0.15,  1.75,
17.90, 19.90,  0.45,  1.95,
19.90, 21.91,  0.65,  2.15,
21.91, 23.91,  0.85,  2.35,
23.91, 25.92,  1.05,  2.55,
25.92, 27.92,  1.25,  2.85,
27.92, 29.93,  1.45,  3.05,
29.93, 31.93,  1.65,  3.25,
31.93, 33.93,  1.95,  3.55,
33.93, 35.94,  2.15,  3.65,
35.94, 37.94,  2.45,  3.95,
37.94, 39.95,  2.65,  4.15,
39.95, 41.95,  2.95,  4.35,
41.95, 43.96,  3.05,  4.55,
43.96, 45.96,  3.35,  4.85,
45.96, 47.96,  3.55,  5.15
],
[
13.53, 15.75, -0.35,  1.45,
15.75, 17.96, -0.05,  1.65,
17.96, 20.17,  0.25,  1.75,
20.17, 22.38,  0.55,  1.85,
22.38, 24.59,  0.75,  1.95,
24.59, 26.80,  0.95,  2.25,
26.80, 29.02,  1.25,  2.55,
29.02, 31.23,  1.45,  2.85,
31.23, 33.44,  1.65,  3.15,
33.44, 35.65,  1.85,  3.45,
35.65, 37.86,  2.05,  3.75,
37.86, 40.07,  2.25,  4.05,
40.07, 42.29,  2.45,  4.35,
42.29, 44.50,  2.75,  4.55,
44.50, 46.71,  3.05,  4.75,
46.71, 48.92,  3.35,  5.15,
48.92, 51.13,  3.55,  5.25,
51.13, 53.34,  3.75,  5.55,
53.34, 55.56,  4.05,  5.75,
55.56, 57.77,  4.25,  6.05
],
[
19.19, 21.61,  0.35,  1.75,
21.61, 24.03,  0.55,  1.85,
24.03, 26.45,  0.85,  1.95,
26.45, 28.87,  1.05,  2.05,
28.87, 31.29,  1.25,  2.25,
31.29, 33.70,  1.45,  2.65,
33.70, 36.12,  1.75,  2.95,
36.12, 38.54,  1.95,  3.35,
38.54, 40.96,  2.15,  3.65,
40.96, 43.38,  2.35,  3.95,
43.38, 45.80,  2.55,  4.35,
45.80, 48.22,  2.75,  4.65,
48.22, 50.64,  2.95,  5.05,
50.64, 53.06,  3.25,  5.35,
53.06, 55.48,  3.65,  5.65,
55.48, 57.89,  3.95,  5.95,
57.89, 60.31,  4.25,  6.25,
60.31, 62.73,  4.55,  6.55,
62.73, 65.15,  4.75,  6.65,
65.15, 67.57,  5.05,  7.05
],
[
24.85, 27.47,  0.85,  2.05,
27.47, 30.10,  1.05,  2.15,
30.10, 32.73,  1.35,  2.25,
32.73, 35.35,  1.55,  2.45,
35.35, 37.98,  1.75,  2.55,
37.98, 40.61,  1.95,  2.95,
40.61, 43.23,  2.15,  3.45,
43.23, 45.86,  2.35,  3.75,
45.86, 48.48,  2.65,  4.15,
48.48, 51.11,  2.85,  4.55,
51.11, 53.74,  3.05,  4.85,
53.74, 56.36,  3.25,  5.25,
56.36, 58.99,  3.55,  5.55,
58.99, 61.62,  3.75,  5.95,
61.62, 64.24,  4.15,  6.45,
64.24, 66.87,  4.55,  6.85,
66.87, 69.49,  4.85,  7.15,
69.49, 72.12,  5.15,  7.45,
72.12, 74.75,  5.45,  7.75,
74.75, 77.37,  5.75,  8.05
],
[
30.50, 33.34,  1.35,  2.35,
33.34, 36.17,  1.55,  2.45,
36.17, 39.00,  1.75,  2.65,
39.00, 41.84,  1.95,  2.85,
41.84, 44.67,  2.25,  2.95,
44.67, 47.51,  2.45,  3.25,
47.51, 50.34,  2.65,  3.85,
50.34, 53.17,  2.85,  4.35,
53.17, 56.01,  3.05,  4.65,
56.01, 58.84,  3.35,  5.05,
58.84, 61.67,  3.55,  5.35,
61.67, 64.51,  3.75,  5.85,
64.51, 67.34,  4.05,  6.25,
67.34, 70.17,  4.35,  6.65,
70.17, 73.01,  4.75,  7.05,
73.01, 75.84,  5.15,  7.55,
75.84, 78.68,  5.45,  8.05,
78.68, 81.51,  5.85,  8.45,
81.51, 84.34,  6.05,  8.75,
84.34, 87.18,  6.35,  8.95
],
[
36.16, 39.20,  1.75,  2.65,
39.20, 42.24,  1.95,  2.75,
42.24, 45.28,  2.25,  3.05,
45.28, 48.32,  2.45,  3.25,
48.32, 51.36,  2.65,  3.45,
51.36, 54.41,  2.85,  3.65,
54.41, 57.45,  3.05,  4.15,
57.45, 60.49,  3.35,  4.75,
60.49, 63.53,  3.55,  5.25,
63.53, 66.57,  3.85,  5.65,
66.57, 69.61,  4.05,  6.05,
69.61, 72.65,  4.25,  6.35,
72.65, 75.69,  4.55,  6.85,
75.69, 78.73,  4.85,  7.25,
78.73, 81.77,  5.25,  7.75,
81.77, 84.82,  5.65,  8.15,
84.82, 87.86,  6.05,  8.65,
87.86, 90.90,  6.35,  9.15,
90.90, 93.94,  6.75,  9.65,
93.94, 96.98,  7.05,  9.95
],
[
41.82, 45.06,  2.15,  2.95,
45.06, 48.31,  2.35,  3.15,
48.31, 51.56,  2.65,  3.35,
51.56, 54.81,  2.85,  3.65,
54.81, 58.06,  3.05,  3.85,
58.06, 61.31,  3.25,  4.15,
61.31, 64.55,  3.55,  4.45,
64.55, 67.80,  3.75,  5.15,
67.80, 71.05,  4.05,  5.75,
71.05, 74.30,  4.25,  6.15,
74.30, 77.55,  4.55,  6.55,
77.55, 80.80,  4.85,  6.95,
80.80, 84.04,  5.05,  7.45,
84.04, 87.29,  5.35,  7.95,
87.29, 90.54,  5.75,  8.35,
90.54, 93.79,  6.15,  8.85,
93.79, 97.04,  6.65,  9.35,
97.04, 100.29,  6.95,  9.85,
100.29, 103.53,  7.35, 10.35,
103.53, 106.78,  7.75, 10.95
],
[
47.47, 50.93,  2.55,  3.25,
50.93, 54.38,  2.75,  3.55,
54.38, 57.84,  3.05,  3.75,
57.84, 61.30,  3.25,  4.05,
61.30, 64.75,  3.45,  4.35,
64.75, 68.21,  3.75,  4.65,
68.21, 71.66,  3.95,  4.95,
71.66, 75.12,  4.15,  5.55,
75.12, 78.57,  4.45,  6.15,
78.57, 82.03,  4.75,  6.65,
82.03, 85.48,  5.05,  7.15,
85.48, 88.94,  5.25,  7.65,
88.94, 92.40,  5.55,  8.05,
92.40, 95.85,  5.85,  8.55,
95.85, 99.31,  6.35,  9.05,
99.31, 102.76,  6.65,  9.45,
102.76, 106.22,  7.15, 10.05,
106.22, 109.67,  7.55, 10.55,
109.67, 113.13,  7.95, 10.95,
113.13, 116.58,  8.35, 11.55
],
[
53.13, 56.79,  2.95,  3.65,
56.79, 60.46,  3.15,  3.95,
60.46, 64.12,  3.35,  4.15,
64.12, 67.78,  3.65,  4.45,
67.78, 71.44,  3.85,  4.75,
71.44, 75.11,  4.15,  5.15,
75.11, 78.77,  4.35,  5.45,
78.77, 82.43,  4.65,  5.95,
82.43, 86.10,  4.95,  6.55,
86.10, 89.76,  5.15,  7.15,
89.76, 93.42,  5.45,  7.65,
93.42, 97.08,  5.75,  8.15,
97.08, 100.75,  6.05,  8.55,
100.75, 104.41,  6.35,  9.05,
104.41, 108.07,  6.85,  9.65,
108.07, 111.74,  7.25, 10.05,
111.74, 115.40,  7.65, 10.55,
115.40, 119.06,  8.05, 11.15,
119.06, 122.72,  8.45, 11.75,
122.72, 126.39,  8.85, 12.25
],
[
58.79, 62.66,  3.35,  4.05,
62.66, 66.53,  3.55,  4.35,
66.53, 70.40,  3.75,  4.55,
70.40, 74.27,  4.05,  4.95,
74.27, 78.14,  4.25,  5.25,
78.14, 82.01,  4.55,  5.55,
82.01, 85.88,  4.75,  5.95,
85.88, 89.75,  5.05,  6.35,
89.75, 93.62,  5.35,  7.05,
93.62, 97.49,  5.65,  7.65,
97.49, 101.36,  5.95,  8.15,
101.36, 105.23,  6.25,  8.65,
105.23, 109.10,  6.55,  9.15,
109.10, 112.97,  6.85,  9.65,
112.97, 116.84,  7.25, 10.05,
116.84, 120.71,  7.75, 10.65,
120.71, 124.58,  8.15, 11.25,
124.58, 128.45,  8.55, 11.75,
128.45, 132.32,  8.95, 12.35,
132.32, 136.19,  9.35, 12.85
]
);

 my $Nslit  = 30;
 my $Nblock  = 20;

 for(my $n=1; $n<=$Nplate; $n++){
  for(my $i=1; $i<=$Nslit; $i++){
    for(my $j=1; $j<=$Nblock; $j++){ 
	my $n_c     = cnumber($n-1, 1);
	my $i_c     = cnumber($i-1, 10);
	my $j_c     = cnumber($j-1, 10);

	$detector{"name"}        = "$DetectorName\_plate$n_c.slit$i_c.block$j_c";
	$detector{"mother"}      = "$DetectorMother";
	$detector{"description"} = $detector{"name"};
	$detector{"pos"}         = "0*cm 0*cm $PlateZ[$n-1]*cm";
	$detector{"rotation"}    = "0*deg 0*deg 0*deg";
	$detector{"color"}       = "$color_baffle";
	$detector{"type"}        = "Tube";
	my $Rin  = $x[$n-1][($j-1)*4+0];
	my $Rout = $x[$n-1][($j-1)*4+1];
	my $stopphi = $x[$n-1][($j-1)*4+2]+($i-1)*12+12;
# 	if ($n==11 && $Rin<100) {$stopphi=7+($i-1)*12+12;}
 	my $startphi = $x[$n-1][($j-1)*4+3]+($i-1)*12+5;
	my $phidiff  = $stopphi-$startphi;
# 	if ($n==11) {$startphi=$startphi+1;}
	$detector{"dimensions"}  = "$Rin*cm $Rout*cm $Dz*cm $startphi*deg $phidiff*deg";
# 	$detector{"dimensions"}  = "$Rin*cm $Rout*cm $Dz*cm $Sphi*deg $Dphi*deg";
	$detector{"material"}    = "$material_baffle";
	$detector{"mfield"}      = "no";
	$detector{"ncopy"}       = 1;
	$detector{"pMany"}       = 1;
	$detector{"exist"}       = 1;
	$detector{"visible"}     = 1;
	$detector{"style"}       = 1;
	$detector{"sensitivity"} = "$sensitivity_baffle";
	$detector{"hit_type"}    = "$hit_baffle";
	$detector{"identifiers"} = "";
	print_det(\%detector, $file);
     }
   }
 }
}
make_baffle_blocks();
